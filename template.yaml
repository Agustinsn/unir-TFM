AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: Infraestructura base para app de usuarios (Cognito + Lambdas + CI/CD)

Parameters:
  BranchName:
    Type: String
    Default: main
  Stage:
    Type: String
    Default: dev
    Description: Environment stage (dev, staging, prod)

Globals:
  Function:
    Timeout: 10
    Runtime: nodejs18.x
    Architectures:
      - x86_64

Resources:
  ## ========== Cognito ==========

  UserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      UserPoolName: SAMUserPool
      AutoVerifiedAttributes:
        - email
      UsernameAttributes:
        - email
      Policies:
        PasswordPolicy:
          MinimumLength: 8
          RequireUppercase: true
          RequireLowercase: true
          RequireNumbers: true
          RequireSymbols: false

  UserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      ClientName: user-app-client
      UserPoolId: !Ref UserPool
      GenerateSecret: false
      ExplicitAuthFlows:
        - ALLOW_ADMIN_USER_PASSWORD_AUTH
        - ALLOW_REFRESH_TOKEN_AUTH

  ## ========== Lambdas ==========

  RegisterUserFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/register/
      Handler: app.register
      Runtime: nodejs18.x
      Environment:
        Variables:
          USER_POOL_ID: !Ref UserPool
          CLIENT_ID: !Ref UserPoolClient
      Policies:
        - Statement:
            - Effect: Allow
              Action:
                - cognito-idp:SignUp
                - cognito-idp:AdminConfirmSignUp
              Resource: !Sub arn:aws:cognito-idp:${AWS::Region}:${AWS::AccountId}:userpool/${UserPool}
            - Effect: Allow
              Action:
                - logs:CreateLogGroup
                - logs:CreateLogStream
                - logs:PutLogEvents
              Resource: arn:aws:logs:*:*:*
      Events:
        ApiRegister:
          Type: Api
          Properties:
            Path: /register
            Method: post

  LoginUserFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/login/
      Handler: app.login
      Runtime: nodejs18.x
      Environment:
        Variables:
          CLIENT_ID: !Ref UserPoolClient
      Policies:
        - Statement:
            - Effect: Allow
              Action:
                - cognito-idp:InitiateAuth
              Resource: !Sub arn:aws:cognito-idp:${AWS::Region}:${AWS::AccountId}:userpool/${UserPool}
            - Effect: Allow
              Action:
                - logs:CreateLogGroup
                - logs:CreateLogStream
                - logs:PutLogEvents
              Resource: arn:aws:logs:*:*:*
      Events:
        ApiLogin:
          Type: Api
          Properties:
            Path: /login
            Method: post

  ## ========== S3 para Artifacts ==========

  ArtifactBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "user-app-artifacts-${AWS::AccountId}-${AWS::StackName}-${Stage}"

  ## ========== CI/CD Roles ==========

  CodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action: sts:AssumeRole
          - Effect: Allow
            Principal:
              Service: cloudformation.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: BuildPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - codebuild:StartBuild
                  - codebuild:BatchGetBuilds
                  - codepipeline:PutJobSuccessResult
                  - codepipeline:PutJobFailureResult
                  - cloudformation:DescribeStacks
                  - cloudformation:DescribeStackResources
                  - cloudformation:GetTemplate
                  - cloudformation:ValidateTemplate
                  - lambda:*
                  - logs:*
                  - s3:CreateBucket
                  - s3:GetObject
                  - s3:PutObject
                  - s3:GetBucketLocation
                  - iam:GetRole
                  - iam:PassRole
                  - iam:CreateRole
                  - iam:PutRolePolicy
                  - iam:AttachRolePolicy
                  - iam:TagRole
                  - iam:UntagRole
                  - tag:*
                  - cloudwatch:PutMetricData
                  - cognito-idp:*
                  - secretsmanager:GetSecretValue
                Resource: "*"

  CodePipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codepipeline.amazonaws.com
                - cloudformation.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: PipelinePolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - codebuild:StartBuild
                  - codebuild:BatchGetBuilds
                  - codepipeline:PutJobSuccessResult
                  - codepipeline:PutJobFailureResult
                  - cloudformation:*
                  - lambda:*
                  - logs:*
                  - s3:CreateBucket
                  - s3:GetObject
                  - s3:PutObject
                  - s3:ListBucket
                  - s3:GetBucketLocation
                  - iam:GetRole
                  - iam:PassRole
                  - iam:CreateRole
                  - iam:PutRolePolicy
                  - iam:AttachRolePolicy
                  - iam:TagRole
                  - iam:UntagRole
                  - tag:*
                  - cognito-idp:*
                  - secretsmanager:GetSecretValue
                Resource: "*"

  ## ========== CodeBuild & CodePipeline ==========

  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub "user-app-build"
      Source:
        Type: CODEPIPELINE
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:7.0
        Type: LINUX_CONTAINER
        PrivilegedMode: true
      ServiceRole: !GetAtt CodeBuildRole.Arn
      Artifacts:
        Type: CODEPIPELINE

  CodePipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: !Sub "user-app-pipeline"
      RoleArn: !GetAtt CodePipelineRole.Arn
      ArtifactStore:
        Type: S3
        Location: !Ref ArtifactBucket
      Stages:
        - Name: Source
          Actions:
            - Name: GitHubSource
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Provider: GitHub
                Version: 1
              OutputArtifacts:
                - Name: SourceOutput
              Configuration:
                Owner: Agustinsn
                Repo: unir-TFM
                Branch: master
                OAuthToken: "{{resolve:secretsmanager:github-token:SecretString:token}}"
              RunOrder: 1
        - Name: Build
          Actions:
            - Name: Build
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: 1
              InputArtifacts:
                - Name: SourceOutput
              OutputArtifacts:
                - Name: BuildOutput
              Configuration:
                ProjectName: !Ref CodeBuildProject
              RunOrder: 1
        - Name: Deploy
          Actions:
            - Name: SamDeploy
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              InputArtifacts:
                - Name: BuildOutput
              Configuration:
                ActionMode: CREATE_UPDATE
                StackName: !Sub user-app-stack-${Stage}
                Capabilities: CAPABILITY_IAM,CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND
                TemplatePath: BuildOutput::packaged.yaml
                RoleArn: !GetAtt CodePipelineRole.Arn
              RunOrder: 1

Outputs:
  CognitoUserPoolId:
    Description: ID del User Pool
    Value: !Ref UserPool
  CognitoClientId:
    Description: ID del App Client
    Value: !Ref UserPoolClient
  ArtifactBucketName:
    Description: Nombre del bucket S3 para artifacts
    Value: !Ref ArtifactBucket
